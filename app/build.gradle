plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.fpremake'
    compileSdk 33

    defaultConfig {
        applicationId "com.tanveer.test.composeskeletonpractice"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

//region Dependencies collections
final AndroidDevelopmentCoreDependencies = [
        androidxCore      : 'androidx.core:core-ktx:1.7.0',
        androidxAppcompat : 'androidx.appcompat:appcompat:1.5.1',
        androidxMaterial  : 'com.google.android.material:material:1.4.0',
        androidxConstraint: 'androidx.constraintlayout:constraintlayout:2.1.4',


]

final testJUnitDependencies = [
        jUnit: 'junit:junit:4.13.2'
]

final androidTestDependencies = [
        testJunit   : 'androidx.test.ext:junit:1.1.3',
        testEspresso: 'androidx.test.espresso:espresso-core:3.3.0'
]

final lifeCycleDependencies = [
        navigationFragment: 'androidx.navigation:navigation-fragment-ktx:2.5.3',
        navigationUi      : 'androidx.navigation:navigation-ui-ktx:2.5.3',

        lifeCycle         : "androidx.lifecycle:lifecycle-runtime:2.5.1",
        viewModelLifeCycle: "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1",
        kotlinCoroutine   : 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
]

final composeDependencies = [
        // Material Design 3
        material3ForCompose      : "androidx.compose.material3:material3:1.1.0-alpha01",
        // or Material Design 2
        material2ForCompose      : 'androidx.compose.material:material:1.3.0',
        // or only import the main APIs for the underlying toolkit systems,
        // such as input and measurement/layout
        composeUi                : "androidx.compose.ui:ui:$compose_ui_version",
        // Android Studio Preview support
        composeUiToolingPreview  : "androidx.compose.ui:ui-tooling-preview:$compose_ui_version",
        // UI Tests
        androidTestImplementation: "androidx.compose.ui:ui-test-junit4:$compose_ui_version",
        // Optional - Integration with activities
        composeForActivity       : "androidx.activity:activity-compose:1.6.1",
        // Optional - Integration with ViewModels
        composeForViewModels     : "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1",
        // Optional - Integration with LiveData
        composeForLiveData       : "androidx.compose.runtime:runtime-livedata:1.3.0"
]

final debugComposeDependencies = [
        debugComposeUiTooling     : "androidx.compose.ui:ui-tooling:$compose_ui_version",
        debugComposeUiTestManifest: "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
]

final navigationArchitectureDependencies = [
        navigationCompose: "androidx.navigation:navigation-compose:$nav_version"
]

final googleGlide = [
        glide: 'com.github.bumptech.glide:glide:4.12.0'
]

final annotationProcessorDependencies = [
        glideCompiler: 'com.github.bumptech.glide:compiler:4.12.0'
]

final networkDependencies = [
        retrofit             : "com.squareup.retrofit2:retrofit:$retrofit_version",
        retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:$retrofit_version",
        okhttp               : "com.squareup.okhttp3:okhttp:$retrofit_version",
        okHttp3Logging       : "com.squareup.okhttp3:logging-interceptor:$ok_http_version",
]

final hiltInjection = [
        hilt                  : "com.google.dagger:hilt-android:$hilt_version",
        hiltNavigationFragment: "androidx.hilt:hilt-navigation-fragment:1.0.0"
]

final compileDependencies = [
        dIHilt           : "com.google.dagger:hilt-android-compiler:2.38.1",
        //Lifecycle-aware components perform actions in response to a change in the lifecycle status of another component,
        // such as activities and fragments. These components help you produce better-organized, and often lighter-weight code,
        // that is easier to maintain.
        lifecycleCompiler: "androidx.lifecycle:lifecycle-compiler:2.3.1"
]

final extraDependencies = [
        // Splash screen Api
       splashScreen : "androidx.core:core-splashscreen:1.0.0",
]

//endregion

dependencies {

    implementation AndroidDevelopmentCoreDependencies.values()
    testImplementation testJUnitDependencies.values()

    androidTestImplementation androidTestDependencies.values()

    //All the Lifecycle related Libs
    implementation lifeCycleDependencies.values()

    //All required Compose Library
    implementation composeDependencies.values()

    //Compose Debug Purpose Libs
    debugImplementation debugComposeDependencies.values()

    //Navigation Architecture Library
    implementation navigationArchitectureDependencies.values()

    // Glide - Image loading
    implementation googleGlide.values()
    annotationProcessor annotationProcessorDependencies.values()

    //Retrofit
    implementation networkDependencies.values()

    //HILT
    implementation hiltInjection.values()

    //annotationProcessor Compilers Dependencies
    annotationProcessor compileDependencies.values()

    implementation extraDependencies.values()
}